upstream theia {
 server theia:3000;
}

upstream oauth {
  server oauth:4180;
}

server {
  listen 443 ssl http2;
  # listen [::]:443 ssl http2;

  server_name ${NGINX_HOST};
  root /var/www/${NGINX_HOST}/public;

  # SSL
  ssl_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;

  # security
  # include security.conf;

  location /oauth2/ {
    proxy_pass       http://oauth;
    proxy_set_header Host                    $host;
    proxy_set_header X-Real-IP               $remote_addr;
    proxy_set_header X-Scheme                $scheme;
    proxy_set_header X-Auth-Request-Redirect $request_uri;
  }

  location = /oauth2/auth {
    proxy_pass       http://oauth;
    proxy_set_header Host             $host;
    proxy_set_header X-Real-IP        $remote_addr;
    proxy_set_header X-Scheme         $scheme;
    proxy_set_header Content-Length   "";
    proxy_pass_request_body           off;
  }

  location / {
    auth_request /oauth2/auth;
    error_page 401 = /oauth2/sign_in;
    include proxy.conf;
    proxy_pass http://theia/;
  }

  include general.conf;
}

# subdomains redirect
server {
  listen 443 ssl http2;
  # listen [::]:443 ssl http2;

  server_name www.${NGINX_HOST};

  # SSL
  ssl_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;

  return 301 https://${NGINX_HOST}$request_uri;
}


# HTTP redirect
server {
  listen 80;
  # listen [::]:80;

  server_name ${NGINX_HOST};

  include letsencrypt.conf;

  location / {
    return 301 https://${NGINX_HOST}$request_uri;
  }
}
